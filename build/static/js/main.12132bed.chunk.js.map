{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","assets/treeplenish.png","Login.js","Landing.js","Data.js","Chart.js","Announcements.js","ExportTreeRequestsButton.js","ExportDataButton.js","Dashboard.js","StageTwo.js","Skeleton.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Login","history","useHistory","useState","username","setUsername","usernameFocused","setUsernameFocused","password","setPassword","passwordFocused","setPasswordFocused","apiCall","u","p","Promise","resolve","fetch","res","json","data","JSON","parse","cab","jsonObj","objName","schoolidnum","currentPass","prop","checkObj","x","a","strUsername","strPassword","currUsername","Number","currPassword","proceed","push","pathname","state","window","confirm","Fragment","className","style","width","height","Container","Row","Col","lg","alt","src","tree_plenish_icon","padding","FormGroup","classnames","focused","InputGroup","Input","placeholder","type","onFocus","e","onBlur","onChange","target","value","Button","size","onClick","Landing","document","documentElement","scrollTop","scrollingElement","this","refs","main","ref","React","Component","volunteerData","name","email","age","chartData","species","requests","color","treeRequestData","sponsorshipData","amount","Chart","props","labels","datasets","label","backgroundColor","data2","percentage","completed","bgColor","options","title","display","text","fontSize","legend","position","Announcements","href","ExportTreeRequestsButton","csvLink","useRef","clickLink","current","link","click","filename","ExportDataButton","Dashboard","onDone","prevUsername","prevPassword","requestName","map","volunteer","index","sponsor","StageTwo","prevInfo","console","log","Skeleton","location","page","setPage","formValues","setFormValues","isBackButtonClicked","setIsBackButtonClicked","useEffect","pushState","addEventListener","onBackButtonEvent","onCloseEvent","removeEventListener","preventDefault","returnValue","handleFormChange","updatedValues","values","WhichStage","themonth","Date","getMonth","to","ReactDOM","render","path","exact","getElementById"],"mappings":"4MAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+ICPC,MAA0B,wCCwJ1BQ,EApID,WAEV,IAAIC,EAAUC,cAFE,EAIgBC,mBAAS,MAJzB,mBAITC,EAJS,KAICC,EAJD,OAK8BF,mBAAS,MALvC,mBAKTG,EALS,KAKQC,EALR,OAMgBJ,mBAAS,MANzB,mBAMTK,EANS,KAMCC,EAND,OAO8BN,mBAAS,MAPvC,mBAOTO,EAPS,KAOQC,EAPR,KAqBhB,SAASC,EAAQC,EAAGC,GAChB,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,MAAM,YACLvB,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,UAChBzB,MAAK,SAAA0B,GAAI,OAAIC,KAAKC,MAAMF,EAAKG,QAC7B7B,MAAK,SAAA8B,GAAO,OAjBnB,SAAkBC,EAASC,EAAaC,GACpC,IAAK,IAAMC,KAAQH,EACjB,GAAIA,EAAQG,GAAR,WAA8BF,EAChC,OAAID,EAAQG,GAAR,WAA8BD,EACzB,EAEA,EAWME,CAASL,EAASX,EAAGC,MACrCpB,MAAK,SAAAoC,GACJd,EAAQc,SA5BA,4CAiChB,oCAAAC,EAAA,6DACUC,EAAc5B,EACd6B,EAAczB,EACd0B,EAAeC,OAAO/B,GACtBgC,EAAeD,OAAO3B,GAJhC,SAKwBI,EAAQsB,EAAcE,GAL9C,OAMoB,KADZC,EALR,QAOQpC,EAAQqC,KAAK,CACTC,SAAU,aACVC,MAAO,CAACpC,SAAU4B,EAAaxB,SAAUyB,KAE1B,IAAZI,EACPI,OAAOC,QAAQ,kCAEfD,OAAOC,QAAQ,oDAdvB,4CAjCgB,sBAmDhB,OACI,cAAC,IAAMC,SAAP,UACI,qBAAKC,UAAY,uBAAjB,SACI,sBAAKA,UAAY,4EAAjB,UACI,qBAAKA,UAAY,yBAAyBC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAA1E,SACI,qBAAKH,UAAY,wCAAjB,SACI,cAACI,EAAA,EAAD,CAAWJ,UAAY,wBAAvB,SACI,qBAAKA,UAAY,WAAjB,SACI,cAACK,EAAA,EAAD,CAAKL,UAAY,4CAAjB,SACI,eAACM,EAAA,EAAD,CAAKN,UAAY,iCAAiCO,GAAG,IAArD,UACI,qBACIC,IAAM,MACNR,UAAY,sBACZS,IAAKC,EACLT,MAAO,CAAEC,MAAO,QAASS,QAAS,SAEtC,oBAAIX,UAAY,0BAAhB,oCAGA,sBAAKA,UAAY,OAAjB,UACI,cAACY,EAAA,EAAD,CACIZ,UAAWa,IAAW,CAClBC,QAASpD,IAFjB,SAKA,cAACqD,EAAA,EAAD,CAAYf,UAAY,0BAAxB,SACI,cAACgB,EAAA,EAAD,CACIC,YAAc,WACdC,KAAO,WACPlB,UAAY,eACZmB,QAAS,SAAAC,GAAC,OAAIzD,GAAmB,IACjC0D,OAAU,SAAAD,GAAC,OAAIzD,GAAmB,IAClC2D,SAAY,SAAAF,GAAC,OAAI3D,EAAY2D,EAAEG,OAAOC,cAI9C,cAACZ,EAAA,EAAD,CACIZ,UAAWa,IAAW,CAClBC,QAAShD,IAFjB,SAKA,cAACiD,EAAA,EAAD,CAAYf,UAAY,0BAAxB,SACI,cAACgB,EAAA,EAAD,CACIC,YAAc,WACdC,KAAO,WACPlB,UAAY,eACZmB,QAAS,SAAAC,GAAC,OAAIrD,GAAmB,IACjCsD,OAAU,SAAAD,GAAC,OAAIrD,GAAmB,IAClCuD,SAAY,SAAAF,GAAC,OAAIvD,EAAYuD,EAAEG,OAAOC,cAI9C,sBAAKvB,MAAO,CAAEU,QAAS,OAAvB,UACA,cAACc,EAAA,EAAD,CACIzB,UAAY,sBACZ0B,KAAO,KACPC,QA3GhC,2CAwG4B,SAKI,sBAAM3B,UAAU,kBAAhB,sBACM,uBAStC,qBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,MAArC,SACI,cAACC,EAAA,EAAD,CAAWJ,UAAY,kBAAvB,SACI,mBAAGA,UAAU,iCAAb,yGCxHb4B,E,uKAhBX,WACIC,SAASC,gBAAgBC,UAAY,EACrCF,SAASG,iBAAiBD,UAAY,EACtCE,KAAKC,KAAKC,KAAKJ,UAAY,I,oBAE/B,WACI,OACI,mCACI,sBAAMK,IAAI,OAAV,SACI,cAAC,EAAD,Y,GAVEC,IAAMC,W,QCJfC,EAAgB,CACzB,CACIC,KAAM,iBACNC,MAAO,+BACPC,IAAK,KAET,CACIF,KAAM,gBACNC,MAAO,qCACPC,IAAK,IAET,CACIF,KAAM,gBACNC,MAAO,oBACPC,IAAK,GAET,CACIF,KAAM,eACNC,MAAO,uBACPC,IAAK,IAET,CACIF,KAAM,eACNC,MAAO,uBACPC,IAAK,GAET,CACIF,KAAM,gBACNC,MAAO,0BACPC,IAAK,GAET,CACIF,KAAM,aACNC,MAAO,yBACPC,IAAK,IAET,CACIF,KAAM,iBACNC,MAAO,kDACPC,IAAK,IAET,CACIF,KAAM,WACNC,MAAO,0BACPC,IAAK,IAET,CACIF,KAAM,eACNC,MAAO,4BACPC,IAAK,IAET,CACIF,KAAM,mBACNC,MAAO,iCACPC,IAAK,IAET,CACIF,KAAM,gBACNC,MAAO,kCACPC,IAAK,KAIAC,EACT,CACIC,QAAS,CAAE,iBAAkB,YAAa,cAAe,aAAc,eAAe,WACtFC,SAAU,CAAC,KAAM,KAAM,IAAK,IAAK,IAAK,KACtCC,MAAO,CAAC,uBAAuB,uBAAuB,uBAAuB,uBAAuB,wBAAwB,yBAGvHC,EAAkB,CAC3B,CACIH,QAAS,iBACTC,SAAU,MAEd,CACID,QAAS,YACTC,SAAU,MAEd,CACID,QAAS,cACTC,SAAU,KAEd,CACID,QAAS,aACTC,SAAU,KAEd,CACID,QAAS,eACTC,SAAU,KAEd,CACID,QAAS,UACTC,SAAU,MAILG,EAAkB,CAC3B,CACIR,KAAM,qBACNS,OAAQ,KAEZ,CACIT,KAAM,2BACNS,OAAQ,KAEZ,CACIT,KAAM,0BACNS,OAAQ,KAEZ,CACIT,KAAM,eACNS,OAAQ,M,iBCtBDC,E,kDApFX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDvD,MAAQ,CA2BTpB,KAAK,CACD4E,OAAOT,EAAUC,QACjBS,SAAS,CACL,CACIC,MAAM,WACN9E,KAAKmE,EAAUE,SACfU,gBAAgBZ,EAAUG,SAItCU,MAAM,IAvCI,E,0CA2ClB,WACI,IAAMC,EAAaxB,KAAKrC,MAAM4D,MAC9B,OACI,sBAAKxD,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAa0D,UAAWD,EAAYE,QAAS,cAEjD,uBACA,cAAC,MAAD,CACInF,KAAMyD,KAAKrC,MAAMpB,KACjBoF,QAAS,CACLC,MAAM,CACFC,SAAQ,EACRC,KAAK,2BACLC,SAAU,IAEdC,OAAO,CACHH,SAAQ,EACRI,SAAS,YAIrB,cAAC,MAAD,CACI1F,KAAMyD,KAAKrC,MAAMpB,KACjBoF,QAAS,CACLC,MAAM,CACFC,SAAQ,EACRC,KAAK,2BACLC,SAAU,IAEdC,OAAO,CACHH,SAAQ,EACRI,SAAS,oB,GA5EjB5B,aCmBL6B,EAtBO,WAClB,OACI,gCACI,2CACA,+BACI,8EACA,kEAEJ,2CACA,+BACI,4EACA,6EAEJ,+CACA,+BACI,6BAAI,mBAAGC,KAAK,+BAAR,oCACJ,6BAAI,mBAAGA,KAAK,uCAAR,0C,0BCcLC,EA1BkB,WAC7B,IAAMC,EAAUC,mBAEVC,EAAS,uCAAG,sBAAArF,EAAA,sDACdmF,EAAQG,QAAQC,KAAKC,QADP,2CAAH,qDAIf,OACI,8BACI,eAACvE,EAAA,EAAD,CAAWJ,UAAU,aAArB,UACI,cAAC,IAAD,CACIA,UAAY,0BACZ0B,KAAO,KACPC,QAAS6C,EAHb,qCAIA,cAAC,UAAD,CACIhG,KAAMuE,EACN6B,SAAS,sBACT5E,UAAU,SACVoC,IAAKkC,EACL/C,OAAO,iBCOZsD,EA1BU,WACrB,IAAMP,EAAUC,mBAEVC,EAAS,uCAAG,sBAAArF,EAAA,sDACdmF,EAAQG,QAAQC,KAAKC,QADP,2CAAH,qDAIf,OACI,8BACI,eAACvE,EAAA,EAAD,CAAWJ,UAAU,aAArB,UACA,cAAC,IAAD,CACIA,UAAY,0BACZ0B,KAAO,KACPC,QAAS6C,EAHb,qCAIA,cAAC,UAAD,CACIhG,KAAM+D,EACNqC,SAAS,oBACT5E,UAAU,SACVoC,IAAKkC,EACL/C,OAAO,iBCkGRuD,EA7GG,SAAC,GAA2C,EAAzCC,OAA0C,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAAmB,EAE1B1H,mBAASyH,GAFiB,mBAEnDxH,EAFmD,aAG1BD,mBAAS0H,IAHiB,mBAGnDrH,EAHmD,KAIpDsH,GAJoD,KAIzC,6BAAyB1H,IAqC1C,OACQ,qBAAKwC,UAAU,iBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAW,6BAAhB,SACI,sBAAKA,UAAU,4EAAf,UACI,qBAAKA,UAAU,QAAf,2CAGA,sBAAKA,UAAU,uBAAf,UACI,eAACI,EAAA,EAAD,CAAWJ,UAAU,eAArB,UACI,mBAAGA,UAAU,iBAAb,wBACA,eAAC,IAAD,CAAsBA,UAAU,QAAhC,UACI,gCACA,+BACI,sCACA,uCACA,0CAGJ,gCACCuC,EAAc4C,KAvD1B,SAACC,EAAWC,GACjC,OACI,+BACI,6BAAKD,EAAU5C,OACf,6BAAK4C,EAAU3C,QACf,6BAAK2C,EAAU1C,QAHV,CAAC2C,kBAwDc,cAAC,EAAD,OAEJ,eAACjF,EAAA,EAAD,CAAWJ,UAAU,eAArB,UACI,mBAAGA,UAAU,iBAAb,2BACA,oBAAIA,UAAU,SAAd,SA1CV,MA2CU,mBAAGA,UAAU,SAAb,qCACA,iDACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,eAACI,EAAA,EAAD,CAAWJ,UAAU,eAArB,UACI,mBAAGA,UAAU,iBAAb,2BACA,cAAC,EAAD,IACA,oBAAIA,UAAY,UAChB,mBAAGA,UAAU,iBAAb,0BACA,eAAC,IAAD,CAAsBA,UAAU,QAAhC,UACI,gCACA,+BACI,sCACA,6CAGJ,gCACCgD,EAAgBmC,KAvE9B,SAACG,EAASD,GAC7B,OACI,+BACI,6BAAKC,EAAQ9C,OACb,6BAAK8C,EAAQrC,WAFR,CAACoC,kBAwEc,6BACI,kFAlEf,SAoEW,uBACA,gDACA,oBAAGrF,UAAU,aAAb,uBAAqCxC,KACrC,oBAAGwC,UAAU,aAAb,uBAAqCpC,KACrC,oBAAGoC,UAAU,aAAb,2BAAyCkF,WAGjD,qBAAKlF,UAAU,SAAf,uGClCbuF,EAvEE,SAAEC,GAEf,IAAMhI,EAAWgI,EAASR,aACpBpH,EAAW4H,EAASP,aAC1BQ,QAAQC,IAAIlI,GAcZ,OACI,qBAAKwC,UAAU,iBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAW,6BAAhB,SACI,sBAAKA,UAAU,4EAAf,UACI,qBAAKA,UAAU,QAAf,SACI,kEAEJ,sBAAKA,UAAU,uBAAf,UACI,eAACI,EAAA,EAAD,CAAWJ,UAAU,eAArB,UACA,mBAAGA,UAAU,iBAAb,2BACA,cAAC,EAAD,OAEA,eAACI,EAAA,EAAD,CAAWJ,UAAU,eAArB,UACI,mBAAGA,UAAU,iBAAb,2BACA,oBAAIA,UAAU,SAAd,SAjBN,MAkBM,mBAAGA,UAAU,SAAb,sCACA,iDACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,eAACI,EAAA,EAAD,CAAWJ,UAAU,eAArB,UACI,mBAAGA,UAAU,iBAAb,0BACA,eAAC,IAAD,CAAsBA,UAAU,QAAhC,UACI,gCACA,+BACI,sCACA,6CAGJ,gCACCgD,EAAgBmC,KA3C1B,SAACG,EAASD,GAC7B,OACI,+BACI,6BAAKC,EAAQ9C,OACb,6BAAK8C,EAAQrC,WAFR,CAACoC,kBA4CU,6BACI,kFAtCX,SAwCO,uBACA,gDACA,oBAAGrF,UAAU,aAAb,uBAAqCxC,KACjC,oBAAGwC,UAAU,aAAb,uBAAqCpC,WAGjD,qBAAKoC,UAAU,SAAf,uGC8BT2F,EA7FE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEVvI,EAAUC,cAFe,EAIPC,mBAAS,GAJF,mBAIxBsI,EAJwB,KAIlBC,EAJkB,OAKKvI,mBAAS,CACzCC,SAAWoI,GAAYA,EAAShG,OAASgG,EAAShG,MAAMpC,SAAYoI,EAAShG,MAAMpC,SAAW,KAC9FI,SAAWgI,GAAYA,EAAShG,OAASgG,EAAShG,MAAMhC,SAAYgI,EAAShG,MAAMhC,SAAW,OAPnE,mBAKxBmI,EALwB,KAKZC,EALY,OAUuBzI,oBAAS,GAVhC,mBAUxB0I,EAVwB,KAUHC,EAVG,KAY/BC,qBAAU,WAIN,OAHAtG,OAAOxC,QAAQ+I,UAAU,KAAM,KAAMvG,OAAO+F,SAASjG,UACrDE,OAAOwG,iBAAiB,WAAYC,GACpCzG,OAAOwG,iBAAiB,eAAgBE,GACjC,WACH1G,OAAO2G,oBAAoB,WAAYF,GACvCzG,OAAO2G,oBAAoB,eAAgBD,MAEhD,IAEH,IAAMD,EAAoB,SAAClF,GACvBA,EAAEqF,iBACGR,IACGpG,OAAOC,QAAQ,+BACfoG,GAAuB,GACvB7I,EAAQqC,KAAK,OAGbG,OAAOxC,QAAQ+I,UAAU,KAAM,KAAMvG,OAAO+F,SAASjG,UACrDuG,GAAuB,MAK7BK,EAAe,SAACnF,GAElB,OADAA,EAAEqF,iBACKrF,EAAEsF,YAAc,mCAGrBC,EAAmB,SAACC,GACtBZ,GAAc,SAACa,GAAD,mBAAC,eACRA,GACAD,OAMX,SAASE,EAAW3D,GAChB,IAEM4D,GAFU,IAAIC,MAEKC,WAEzB,OAAiB,IAAbF,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,KAAbA,EACjE,cAAC,EAAD,CACH/B,aAAce,EAAWvI,SACzByH,aAAcc,EAAWnI,SACzBmH,OAAQ,SAAEvH,EAAUI,GAChBkI,EAAQD,EAAO,GACfc,EAAiB,CAAEnJ,WAAUI,gBAEjB,KAAbmJ,EACA,cAAC,EAAD,CACH/B,aAAce,EAAWvI,SACzByH,aAAcc,EAAWnI,SACzBmH,OAAQ,SAAEvH,EAAUI,GAChBkI,EAAQD,EAAO,GACfc,EAAiB,CAAEnJ,WAAUI,gBAG9B,cAAC,EAAD,CACHoH,aAAce,EAAWvI,SACzByH,aAAcc,EAAWnI,SACzBmH,OAAQ,SAAEvH,EAAUI,GAChBkI,EAAQD,EAAO,GACfc,EAAiB,CAAEnJ,WAAUI,gBAK7C,OAlCA6H,QAAQC,IAAIK,GAmCR,sCACMA,EAAWvI,UAAY,cAAC,IAAD,CAAU0J,GAAG,MACtC,+BACc,IAATrB,GACD,cAACiB,EAAD,UCpFhBK,IAASC,OACL,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACF,OAAQ,SAAAjE,GAAK,OAAI,cAAC,EAAD,eAAaA,OACpD,cAAC,IAAD,CACIkE,KAAK,aACLC,OAAK,EAACF,OAAQ,SAAAjE,GAAK,OAAI,cAAC,EAAD,eAAcA,OAEzC,cAAC,IAAD,CACIkE,KAAK,YACLC,OAAK,EAACF,OAAQ,SAAAjE,GAAK,OAAI,cAAC,EAAD,eAAcA,OAEzC,cAAC,IAAD,CACIkE,KAAK,YACLC,OAAK,EAACF,OAAQ,SAAAjE,GAAK,OAAI,cAAC,EAAD,eAAcA,YAInDtB,SAAS0F,eAAe,SAM1B5K,K","file":"static/js/main.12132bed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/treeplenish.ae2ebf1f.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './App.css'\r\n\r\nimport classnames from \"classnames\";\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup\r\n} from \"reactstrap\";\r\n\r\nimport tree_plenish_icon from './assets/treeplenish.png';\r\n\r\nconst Login = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [username, setUsername] = useState(null);\r\n    const [usernameFocused, setUsernameFocused] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [passwordFocused, setPasswordFocused] = useState(null);\r\n\r\n    function checkObj(objName, schoolidnum, currentPass) {\r\n        for (const prop in objName) {\r\n          if (objName[prop]['schoolid'] === schoolidnum) {\r\n            if (objName[prop]['password'] === currentPass) {\r\n              return 1;\r\n            } else {\r\n              return 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    function apiCall(u, p) {\r\n        return new Promise(resolve => {\r\n          fetch('/coldata')\r\n          .then(res => res.json())\r\n          .then(data => JSON.parse(data.cab))\r\n          .then(jsonObj => checkObj(jsonObj, u, p))\r\n          .then(x => {\r\n            resolve(x);\r\n          });\r\n        });\r\n      }\r\n\r\n    async function handleClick() {\r\n        const strUsername = username;\r\n        const strPassword = password;\r\n        const currUsername = Number(username);\r\n        const currPassword = Number(password);\r\n        var proceed = await apiCall(currUsername, currPassword);\r\n        if (proceed === 1) {\r\n            history.push({\r\n                pathname: '/dashboard',\r\n                state: {username: strUsername, password: strPassword}\r\n            });\r\n        } else if (proceed === 0) {\r\n            window.confirm('Incorrect password. Try again.');\r\n        } else {\r\n            window.confirm('Username & password must be a number. Try again.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className = \"bg-image view-entire\">\r\n                <div className = \"w-100 h-100 d-flex align-items-center justify-content-between flex-column\">\r\n                    <div className = \"justify-content-center\" style={{ width: '100%', height: '92%'}}>\r\n                        <div className = \"w-100 h-100 d-flex align-items-center\">\r\n                            <Container className = \"w-100 shape-container\">\r\n                                <div className = \"col px-0\">\r\n                                    <Row className = \"align-items-center justify-content-center\">\r\n                                        <Col className = \"text-center align-items-center\" lg=\"6\">\r\n                                            <img\r\n                                                alt = \"...\"\r\n                                                className = \"img-fluid img-trans\"\r\n                                                src={tree_plenish_icon}\r\n                                                style={{ width: \"180px\", padding: '1em' }}\r\n                                            />\r\n                                            <h4 className = \"lead-example text-white\">\r\n                                                Your dashboard awaits.\r\n                                            </h4>\r\n                                            <div className = \"mt-5\">\r\n                                                <FormGroup\r\n                                                    className={classnames({\r\n                                                        focused: usernameFocused\r\n                                                    })}\r\n                                                >\r\n                                                <InputGroup className = \"input-group-alternative\">\r\n                                                    <Input\r\n                                                        placeholder = \"Username\"\r\n                                                        type = \"username\"\r\n                                                        className = \"form-control\"\r\n                                                        onFocus={e => setUsernameFocused(true)}\r\n                                                        onBlur = {e => setUsernameFocused(false)}\r\n                                                        onChange = {e => setUsername(e.target.value)}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                </FormGroup>\r\n                                                <FormGroup\r\n                                                    className={classnames({\r\n                                                        focused: passwordFocused\r\n                                                    })}\r\n                                                >\r\n                                                <InputGroup className = \"input-group-alternative\">\r\n                                                    <Input\r\n                                                        placeholder = \"Password\"\r\n                                                        type = \"password\"\r\n                                                        className = \"form-control\"\r\n                                                        onFocus={e => setPasswordFocused(true)}\r\n                                                        onBlur = {e => setPasswordFocused(false)}\r\n                                                        onChange = {e => setPassword(e.target.value)}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                </FormGroup>\r\n                                                <div style={{ padding: '1em'}}>\r\n                                                <Button\r\n                                                    className = \"btn-login btn-trans\"\r\n                                                    size = \"lg\"\r\n                                                    onClick={handleClick}\r\n                                                >\r\n                                                    <span className=\"btn-inner--text\">Log In</span>\r\n                                                </Button>{\" \"}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </Container>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '100%', height: '8%' }}>\r\n                        <Container className = \"container-fluid\">\r\n                            <p className=\"text-white text-center pr-sm-1\">\r\n                                Tree-Plenish: Building Sustainable Communities by Leveraging the Power of Youth\r\n                            </p>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nimport Login from \"./Login.js\";\r\n\r\nclass Landing extends React.Component {\r\n    componentDidMount() {\r\n        document.documentElement.scrollTop = 0;\r\n        document.scrollingElement.scrollTop = 0;\r\n        this.refs.main.scrollTop = 0;\r\n    }\r\n    render () {\r\n        return (\r\n            <>\r\n                <main ref=\"main\">\r\n                    <Login />\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;\r\n","export const volunteerData = [\r\n    {\r\n        name: \"George Burdell\",\r\n        email: \"hellweekeveryweek@gatech.edu\",\r\n        age: 101\r\n    },\r\n    {\r\n        name: \"Michael Scott\",\r\n        email: \"prisonmike@ifeelgodinthischilis.tn\",\r\n        age: 42\r\n    },\r\n    {\r\n        name: \"Roland Schitt\",\r\n        email: \"itshis@sister.org\",\r\n        age: 2\r\n    },\r\n    {\r\n        name: \"Leslie Knope\",\r\n        email: \"waffles@jjsdiner.com\",\r\n        age: 28\r\n    },\r\n    {\r\n        name: \"Jake Peralta\",\r\n        email: \"diehard@beatsie.boys\",\r\n        age: 6\r\n    },\r\n    {\r\n        name: \"Jason Mendoza\",\r\n        email: \"gojags@blakebortles.fan\",\r\n        age: 8\r\n    },\r\n    {\r\n        name: \"Moira Rose\",\r\n        email: \"awholemood@sunrise.bay\",\r\n        age: 49\r\n    },\r\n    {\r\n        name: \"Dwight Schrute\",\r\n        email: \"assistant-to-the-regional-manager@battlestar.ga\",\r\n        age: 35\r\n    },\r\n    {\r\n        name: \"Jung Kim\",\r\n        email: \"thehotbrother@handy.car\",\r\n        age: 23\r\n    },\r\n    {\r\n        name: \"Shannon Ross\",\r\n        email: \"trulycoolandhip@handy.car\",\r\n        age: 23\r\n    },\r\n    {\r\n        name: \"Vincenzo Cassano\",\r\n        email: \"theogcornsalad@consigliere.com\",\r\n        age: 23\r\n    },\r\n    {\r\n        name: \"Han Ji Pyeong\",\r\n        email: \"youaremyfuturedosan@samsan.tech\",\r\n        age: 27\r\n    },\r\n];\r\n\r\nexport const chartData =\r\n    {\r\n        species: [ \"Eastern Redbud\", \"Red Maple\", \"River Birch\", \"Gala Apple\", \"Silver Maple\",\"Pin Oak\" ],\r\n        requests: [2184, 2131, 699, 349, 166, 146],\r\n        color: ['rgba(255,99,132,0.6)','rgba(54,162,235,0.6)','rgba(255,206,86,0.6)','rgba(75,192,192,0.6)','rgba(153,102,255,0.6)','rgba(255,159,64,0.6)']\r\n    };\r\n\r\nexport const treeRequestData = [\r\n    {\r\n        species: \"Eastern Redbud\",\r\n        requests: 2184\r\n    },\r\n    {\r\n        species: \"Red Maple\",\r\n        requests: 2131\r\n    },\r\n    {\r\n        species: \"River Birch\",\r\n        requests: 699\r\n    },\r\n    {\r\n        species: \"Gala Apple\",\r\n        requests: 349\r\n    },\r\n    {\r\n        species: \"Silver Maple\",\r\n        requests: 166\r\n    },\r\n    {\r\n        species: \"Pin Oak\",\r\n        requests: 146\r\n    },\r\n];\r\n\r\nexport const sponsorshipData = [\r\n    {\r\n        name: \"Atlanta Green Club\",\r\n        amount: 100\r\n    },\r\n    {\r\n        name: \"Atlanta Botanical Garden\",\r\n        amount: 450\r\n    },\r\n    {\r\n        name: \"Druid Hills High School\",\r\n        amount: 200\r\n    },\r\n    {\r\n        name: \"Total Raised\",\r\n        amount: 750\r\n    },\r\n];","import React, { Component } from 'react';\r\nimport {Bar, Pie} from 'react-chartjs-2';\r\nimport { chartData } from './Data';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\n\r\nclass Chart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // hardcoded data format\r\n            /*chartData:{\r\n                labels: ['Eastern Redbud','Red Maple','River Birch','Gala Apple','Silver Maple','Pin Oak'],\r\n                datasets:[\r\n                    {\r\n                        label:'Requests',\r\n                        data:[\r\n                            2184,\r\n                            2131,\r\n                            699,\r\n                            349,\r\n                            166,\r\n                            146\r\n                        ],\r\n                        backgroundColor:[\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(54,162,235,0.6)',\r\n                            'rgba(255,206,86,0.6)',\r\n                            'rgba(75,192,192,0.6)',\r\n                            'rgba(153,102,255,0.6)',\r\n                            'rgba(255,159,64,0.6)',\r\n                            'rgba(255,99,132,0.6)'\r\n                        ]\r\n                    }\r\n                ]\r\n            }*/\r\n            data:{\r\n                labels:chartData.species,\r\n                datasets:[\r\n                    {\r\n                        label:'Requests',\r\n                        data:chartData.requests,\r\n                        backgroundColor:chartData.color\r\n                    }\r\n                ]\r\n            },\r\n            data2:70\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const percentage = this.state.data2;\r\n        return (\r\n            <div className=\"chart\">\r\n                <div className=\"progressbar\">\r\n                    <ProgressBar completed={percentage} bgColor={'#016d30'}/>\r\n                </div>\r\n                <br></br>\r\n                <Bar\r\n                    data={this.state.data}\r\n                    options={{\r\n                        title:{\r\n                            display:true,\r\n                            text:'Tree Requests by Species',\r\n                            fontSize: 18\r\n                        },\r\n                        legend:{\r\n                            display:false,\r\n                            position:'right'\r\n                        }\r\n                    }}\r\n                />\r\n                <Pie\r\n                    data={this.state.data}\r\n                    options={{\r\n                        title:{\r\n                            display:true,\r\n                            text:'Tree Requests by Species',\r\n                            fontSize: 18\r\n                        },\r\n                        legend:{\r\n                            display:true,\r\n                            position:'bottom'\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nconst Announcements = () => {\r\n    return (\r\n        <div>\r\n            <h1>Deadlines</h1>\r\n            <ul>\r\n                <li>09/20/21: Complete mentorship online course.</li>\r\n                <li>10/20/21: Complete paperwork.</li>\r\n            </ul>\r\n            <h1>Reminders</h1>\r\n            <ul>\r\n                <li>Research your school's annual paper usage.</li>\r\n                <li>Set a goal for number of trees to plant!</li>\r\n            </ul>\r\n            <h1>Helpful Links</h1>\r\n            <ul>\r\n                <li><a href=\"https://www.tree-plenish.org\">Tree Plenish Website</a></li>\r\n                <li><a href=\"https://www.wikihow.com/Plant-a-Tree\">How to Plant a Tree</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Announcements;","import React, { useState, useRef} from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport { treeRequestData } from './Data';\r\nimport { CSVLink } from 'react-csv';\r\nimport {Container} from \"reactstrap\";\r\n\r\nconst ExportTreeRequestsButton = () => {\r\n    const csvLink = useRef() // setup the ref that we'll use for the hidden CsvLink click once we've updated the data\r\n\r\n    const clickLink = async () => {\r\n        csvLink.current.link.click()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"btn-center\">\r\n                <Button\r\n                    className = \"btn-login-opp btn-trans\"\r\n                    size = \"lg\"\r\n                    onClick={clickLink}>Download as Excel Sheet</Button>\r\n                <CSVLink\r\n                    data={treeRequestData}\r\n                    filename='treeRequestData.csv'\r\n                    className='hidden'\r\n                    ref={csvLink}\r\n                    target='_blank'\r\n                />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExportTreeRequestsButton;\r\n","import React, { useState, useRef} from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport { volunteerData } from './Data';\r\nimport { CSVLink } from 'react-csv';\r\nimport {Container} from \"reactstrap\";\r\n\r\nconst ExportDataButton = () => {\r\n    const csvLink = useRef() // setup the ref that we'll use for the hidden CsvLink click once we've updated the data\r\n\r\n    const clickLink = async () => {\r\n        csvLink.current.link.click()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"btn-center\">\r\n            <Button\r\n                className = \"btn-login-opp btn-trans\"\r\n                size = \"lg\"\r\n                onClick={clickLink}>Download as Excel Sheet</Button>\r\n            <CSVLink\r\n                data={volunteerData}\r\n                filename='volunteerData.csv'\r\n                className='hidden'\r\n                ref={csvLink}\r\n                target='_blank'\r\n            />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExportDataButton;\r\n","import React, { useState, Component, useEffect, useRef} from \"react\";\r\nimport './App.css';\r\nimport Chart from './Chart';\r\nimport Announcements from './Announcements';\r\nimport { volunteerData } from './Data';\r\nimport { sponsorshipData } from './Data';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport ExportTreeRequestsButton from './ExportTreeRequestsButton';\r\nimport ExportDataButton from './ExportDataButton';\r\n\r\nimport {\r\n    Button, Card, CardBody, DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown, Container, Row, Col\r\n} from \"reactstrap\";\r\n\r\nconst Dashboard = ({ onDone, prevUsername, prevPassword }) => {\r\n\r\n    const [username, setUsername] = useState(prevUsername); // username is a STRING\r\n    const [password, setPassword] = useState(prevPassword); // username is a STRING\r\n    const requestName = `TREE REQUESTS FORM ${username}`; // use ` instead of ' for dynamic strings\r\n\r\n    const renderVolunteers = (volunteer, index) => {\r\n        return(\r\n            <tr key={{index}}>\r\n                <td>{volunteer.name}</td>\r\n                <td>{volunteer.email}</td>\r\n                <td>{volunteer.age}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const renderSponsors = (sponsor, index) => {\r\n        return(\r\n            <tr key={{index}}>\r\n                <td>{sponsor.name}</td>\r\n                <td>{sponsor.amount}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const numFreeTrees = 150;\r\n    const totalRequests = 5000;\r\n\r\n    // attempt to write a function to convert regular json format into array format for chart data\r\n    /*const speciesArray = [];\r\n    const requestsArray = [];\r\n    function convertDataToChartFormat() {\r\n        var i;\r\n        for (i = 0; i < data.length; i++) {\r\n            speciesArray.push(data(i).species);\r\n            requestsArray.push(data(i).requests);\r\n        }\r\n    }\r\n\r\n    const newChartData = {convertDataToChartFormat(treeRequestData)};*/\r\n\r\n    return (\r\n            <div className=\"page-container\">\r\n                <div className=\"content-wrap\">\r\n                    <div className={\"bg-light-green view-entire\"}>\r\n                        <div className=\"w-500 h-500 d-flex align-items-center justify-content-between flex-column\">\r\n                            <div className=\"title\">\r\n                                Welcome Pinnacle High School!\r\n                            </div>\r\n                            <div className=\"flex-container w-100\">\r\n                                <Container className=\"custom-col-1\">\r\n                                    <p className=\"col-title-text\">Volunteers</p>\r\n                                    <ReactBootStrap.Table className=\"table\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Email</th>\r\n                                            <th>Age</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {volunteerData.map(renderVolunteers)}\r\n                                        </tbody>\r\n                                    </ReactBootStrap.Table>\r\n                                    <ExportDataButton />\r\n                                </Container>\r\n                                <Container className=\"custom-col-2\">\r\n                                    <p className=\"col-title-text\">Tree Requests</p>\r\n                                    <h2 className=\"center\">{totalRequests}</h2>\r\n                                    <p className=\"center\">total requests received</p>\r\n                                    <p>Progress to Goal</p>\r\n                                    <Chart />\r\n                                    <ExportTreeRequestsButton />\r\n                                </Container>\r\n                                <Container className=\"custom-col-3\">\r\n                                    <p className=\"col-title-text\">Announcements</p>\r\n                                    <Announcements />\r\n                                    <hr className = \"hline\"/>\r\n                                    <p className=\"col-title-text\">Sponsorships</p>\r\n                                    <ReactBootStrap.Table className=\"table\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Amount</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {sponsorshipData.map(renderSponsors)}\r\n                                        </tbody>\r\n                                    </ReactBootStrap.Table>\r\n                                    <ul>\r\n                                        <li>Total Free Trees You Can Give Out to Residents: {numFreeTrees}</li>\r\n                                    </ul>\r\n                                    <br></br>\r\n                                    <h2>Developer Info</h2>\r\n                                    <p className=\"login-text\">Username: {username}</p>\r\n                                    <p className=\"login-text\">Password: {password}</p>\r\n                                    <p className=\"login-text\">Request name: {requestName}</p>\r\n                                </Container>\r\n                            </div>\r\n                            <div className=\"footer\">\r\n                                Tree-Plenish. Building Sustainable Communities by Leveraging the Power of Youth\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { sponsorshipData } from './Data';\r\nimport {Container} from \"reactstrap\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport Chart from './Chart';\r\nimport Announcements from './Announcements';\r\nimport ExportTreeRequestsButton from './ExportTreeRequestsButton';\r\n\r\nconst StageTwo = ( prevInfo ) => {\r\n\r\n    const username = prevInfo.prevUsername;\r\n    const password = prevInfo.prevPassword;\r\n    console.log(username);\r\n\r\n    const renderSponsors = (sponsor, index) => {\r\n        return(\r\n            <tr key={{index}}>\r\n                <td>{sponsor.name}</td>\r\n                <td>{sponsor.amount}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const numFreeTrees = 150;\r\n    const totalRequests = 5000;\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <div className=\"content-wrap\">\r\n                <div className={\"bg-light-green view-entire\"}>\r\n                    <div className=\"w-500 h-500 d-flex align-items-center justify-content-between flex-column\">\r\n                        <div className=\"title\">\r\n                            <h3>Welcome, Pinnacle High School!</h3>\r\n                        </div>\r\n                        <div className=\"flex-container w-100\">\r\n                            <Container className=\"custom-col-1\">\r\n                            <p className=\"col-title-text\">Announcements</p>\r\n                            <Announcements />\r\n                            </Container>\r\n                            <Container className=\"custom-col-2\">\r\n                                <p className=\"col-title-text\">Tree Requests</p>\r\n                                <h2 className=\"center\">{totalRequests}</h2>\r\n                                <p className=\"center\">total requests received!</p>\r\n                                <p>Progress to Goal</p>\r\n                                <Chart />\r\n                                <ExportTreeRequestsButton />\r\n                            </Container>\r\n                            <Container className=\"custom-col-3\">\r\n                                <p className=\"col-title-text\">Sponsorships</p>\r\n                                <ReactBootStrap.Table className=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Amount</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {sponsorshipData.map(renderSponsors)}\r\n                                    </tbody>\r\n                                </ReactBootStrap.Table>\r\n                                <ul>\r\n                                    <li>Total Free Trees You Can Give Out to Residents: {numFreeTrees}</li>\r\n                                </ul>\r\n                                <br></br>\r\n                                <h2>Developer Info</h2>\r\n                                <p className=\"login-text\">Username: {username}</p>\r\n                                    <p className=\"login-text\">Password: {password}</p>\r\n                            </Container>\r\n                        </div>\r\n                        <div className=\"footer\">\r\n                            Tree-Plenish. Building Sustainable Communities by Leveraging the Power of Youth\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StageTwo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\nimport Dashboard from './Dashboard';\r\nimport StageOne from './StageOne';\r\nimport StageTwo from './StageTwo';\r\n\r\nconst Skeleton = ({ location }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [formValues, setFormValues] = useState({\r\n        username: (location && location.state && location.state.username) ? location.state.username : null,\r\n        password: (location && location.state && location.state.password) ? location.state.password : null,\r\n    });\r\n\r\n    const [isBackButtonClicked, setIsBackButtonClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.history.pushState(null, null, window.location.pathname);\r\n        window.addEventListener('popstate', onBackButtonEvent);\r\n        window.addEventListener('beforeunload', onCloseEvent);\r\n        return () => {\r\n            window.removeEventListener('popstate', onBackButtonEvent);\r\n            window.removeEventListener('beforeunload', onCloseEvent);\r\n        };\r\n    }, [])\r\n\r\n    const onBackButtonEvent = (e) => {\r\n        e.preventDefault();\r\n        if (!isBackButtonClicked) {\r\n            if (window.confirm(\"Would you like to go back?\")) {\r\n                setIsBackButtonClicked(true);\r\n                history.push('/');\r\n            }\r\n            else {\r\n                window.history.pushState(null, null, window.location.pathname);\r\n                setIsBackButtonClicked(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onCloseEvent = (e) => {\r\n        e.preventDefault();\r\n        return e.returnValue = 'Are you sure you want to close?';\r\n    }\r\n\r\n    const handleFormChange = (updatedValues) => {\r\n        setFormValues((values) => ({\r\n            ...values,\r\n            ...updatedValues\r\n        }));\r\n    };\r\n\r\n    console.log(formValues);\r\n\r\n    function WhichStage(props) {\r\n        const thedate = new Date();\r\n        // console.log(thedate);\r\n        const themonth = thedate.getMonth(); // Jan is 0, Feb is 1, ..., Dec is 11\r\n\r\n        if (themonth === 6 || themonth === 7 || themonth === 8 || themonth === 9 || themonth === 10) { // stage 1 is July - November\r\n            return <Dashboard\r\n                prevUsername={formValues.username}\r\n                prevPassword={formValues.password}\r\n                onDone={( username, password ) => {\r\n                    setPage(page + 1)\r\n                    handleFormChange({ username, password })\r\n                }}/>;\r\n        } else if (themonth === 11) { // stage 2 is December\r\n            return <StageTwo\r\n                prevUsername={formValues.username}\r\n                prevPassword={formValues.password}\r\n                onDone={( username, password ) => {\r\n                    setPage(page + 1)\r\n                    handleFormChange({ username, password })\r\n                }}/>;\r\n        } else { // stage 3 is January - June\r\n            return <Dashboard\r\n                prevUsername={formValues.username}\r\n                prevPassword={formValues.password}\r\n                onDone={( username, password ) => {\r\n                    setPage(page + 1)\r\n                    handleFormChange({ username, password })\r\n                }}/>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!formValues.username && <Redirect to=\"/\" />}\r\n            <main>\r\n                {page === 0 &&\r\n                <WhichStage/>}\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Skeleton;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Landing from \"./Landing.js\";\nimport Skeleton from \"./Skeleton.js\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact render={props => <Landing {...props} />} />\n            <Route\n                path=\"/dashboard\"\n                exact render={props => <Skeleton {...props} />}\n            />\n            <Route\n                path=\"/stageone\"\n                exact render={props => <Skeleton {...props} />}\n            />\n            <Route\n                path=\"/stagetwo\"\n                exact render={props => <Skeleton {...props} />}\n            />\n        </Switch>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}